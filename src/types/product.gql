enum ProductType {
  RED_WINE
  WHITE_WINE
  SPARKLING_WINE
}

type Product {
  id: ID!
  type: ProductType!
  name: String!
  details: String!
  year: Int!
  producer: Producer!
  size: Float!
  price: Float!
  storage: String
  collections: [String]!
  isVisible: Boolean!
}

input ProductInput {
  type: ProductType!
  name: String!
  details: String!
  year: Int!
  producer: ProducerInput!
  size: Float!
  price: Float!
  storage: String
  isVisible: Boolean!
}

extend type Query {
  getProduct(id: ID!): Product
  getProducts(type: ProductType, includeHidden: Boolean): [Product]
  getProductsByCollection(collectionId: ID!): [Product]
  searchProduct(search: String!): [Product]
}

extend type Mutation {
  setProduct(id: ID, data: ProductInput!): Product!
}
